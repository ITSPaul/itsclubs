@model ClubSignUp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    }

<h2>@ViewBag.Title. NOTE you must have a Valid IT Sligo email account to register.</h2>
<h3>Once your registration has been accepted you will have to confirm by clicking on a link in a conformation email sent to you</h3>


<link href="@Url.Content("~/Content/fullCalendar.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("Register", "Account", FormMethod.Post,
    new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <label class="glyphicon-asterisk"> Means required field</label>

            <div class="form-group">
                @Html.LabelFor(m => m.Sid, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Sid, new { @class = "form-control", Title = "Enter the SXXXXXXXXX id on your card" })
                    @Html.ValidationMessageFor(model => model.Sid)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Fname, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Fname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Fname)
                </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Sname, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Sname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Sname)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", Title = " Your College ID followed by " + (string)@ViewBag.EmailDomain })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course, new { @class = "control-label col-md-2 glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Course,
                 (IEnumerable<SelectListItem>)ViewBag.Programmes, new { @class = "form-control", Title = " Choose your Course from the list, Just choose --Not Listed--" })
                        @Html.ValidationMessageFor(model => model.Course)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Year, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Year, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Year)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Club, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Club, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Club)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.DOB, new { @class = "col-md-2 control-label glyphicon-asterisk" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.DOB, new { @class = "form-control", Title = "Enter Date of Birth dd/mm/yyyy" })
                        @Html.ValidationMessageFor(m => m.DOB)
                    </div>
                </div>

                <div class="form-group ">
                    @Html.LabelFor(m => m.PreferredPosition, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PreferredPosition,
                 (IEnumerable<SelectListItem>)ViewBag.Positions, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PreferredPosition)
                    </div>
                </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>


        }

        @*<div style="width:65%">
                <input name="calendar" id="calendar" class="datepicker" />
            </div>*@


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            @*@Scripts.Render("~/Scripts/lib/jquery.min.js")
                @Scripts.Render("~/Scripts/lib/moment.min.js")
                @Scripts.Render("~/Scripts/fullcalendar.js")*@
            @Scripts.Render("~/Scripts/lib/moment.min.js")
            <script type="text/javascript">
                //$(document).ready(function () {

                //    // page is now ready, initialize the calendar...

                //    $('#calendar').fullCalendar({
                //        // put your options and callbacks here
                //    })
                //});
                //var datepicker = $.fn.datepicker.noConflict(); // return $.fn.datepicker to previously assigned value
                //$.fn.bootstrapDP = datepicker;                 // give $().bootstrapDP the bootstrap-datepicker functionality
                $(document).ready(function () { // will trigger when the document is ready
                    $('.datepicker-dropdown').datepicker(
                        {

                            format: 'dd/mm/yyyy',
                            inline: true
                        }); //Initialise any date pickers
                });

            </script>
        }

